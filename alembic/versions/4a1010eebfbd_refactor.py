"""refactor

Revision ID: 4a1010eebfbd
Revises: 812918eb453c
Create Date: 2025-07-15 14:34:10.481481

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '4a1010eebfbd'
down_revision: Union[str, Sequence[str], None] = '812918eb453c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('experiences',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), server_default='', nullable=False),
    sa.Column('priority', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('last_updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('organisation_id', sa.String(), nullable=False),
    sa.Column('app_id', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('pid', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('modified_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'organisation_id', 'app_id', name='uq_experiences_name_org_app')
    )
    op.create_index('idx_experiences_created_desc', 'experiences', ['created_at'], unique=False, postgresql_using='btree')
    op.create_index('idx_experiences_priority_created_org_app', 'experiences', ['priority', 'created_at', 'organisation_id', 'app_id'], unique=False)
    op.create_index('idx_experiences_priority_org_app', 'experiences', ['priority', 'organisation_id', 'app_id'], unique=False)
    op.create_index('idx_experiences_status_org_app', 'experiences', ['status', 'organisation_id', 'app_id'], unique=False)
    op.create_index('idx_experiences_updated_org_app', 'experiences', ['last_updated_at', 'organisation_id', 'app_id'], unique=False)
    op.create_index(op.f('ix_experiences_app_id'), 'experiences', ['app_id'], unique=False)
    op.create_index(op.f('ix_experiences_id'), 'experiences', ['id'], unique=True)
    op.create_index(op.f('ix_experiences_last_updated_at'), 'experiences', ['last_updated_at'], unique=False)
    op.create_index(op.f('ix_experiences_name'), 'experiences', ['name'], unique=False)
    op.create_index(op.f('ix_experiences_organisation_id'), 'experiences', ['organisation_id'], unique=False)
    op.create_index(op.f('ix_experiences_pid'), 'experiences', ['pid'], unique=True)
    op.create_index(op.f('ix_experiences_priority'), 'experiences', ['priority'], unique=False)
    op.create_index(op.f('ix_experiences_status'), 'experiences', ['status'], unique=False)
    op.create_table('experience_segments',
    sa.Column('experience_id', sa.UUID(), nullable=False),
    sa.Column('segment_id', sa.UUID(), nullable=False),
    sa.Column('target_percentage', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('pid', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('modified_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['experience_id'], ['experiences.pid'], ),
    sa.ForeignKeyConstraint(['segment_id'], ['segments.pid'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('experience_id', 'segment_id', name='uq_experience_segments_exp_seg')
    )
    op.create_index('idx_experience_segments_experience', 'experience_segments', ['experience_id'], unique=False)
    op.create_index('idx_experience_segments_segment', 'experience_segments', ['segment_id'], unique=False)
    op.create_index(op.f('ix_experience_segments_experience_id'), 'experience_segments', ['experience_id'], unique=False)
    op.create_index(op.f('ix_experience_segments_id'), 'experience_segments', ['id'], unique=True)
    op.create_index(op.f('ix_experience_segments_pid'), 'experience_segments', ['pid'], unique=True)
    op.create_index(op.f('ix_experience_segments_segment_id'), 'experience_segments', ['segment_id'], unique=False)
    op.create_table('feature_variants_templates',
    sa.Column('feature_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('config', sa.JSON(), server_default=sa.text("json('{}')"), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('pid', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('modified_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['feature_id'], ['feature_flags.pid'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'feature_id', name='uq_feature_variants_templates_name_feature')
    )
    op.create_index('idx_feature_variants_templates_feature', 'feature_variants_templates', ['feature_id'], unique=False)
    op.create_index(op.f('ix_feature_variants_templates_feature_id'), 'feature_variants_templates', ['feature_id'], unique=False)
    op.create_index(op.f('ix_feature_variants_templates_id'), 'feature_variants_templates', ['id'], unique=True)
    op.create_index(op.f('ix_feature_variants_templates_name'), 'feature_variants_templates', ['name'], unique=False)
    op.create_index(op.f('ix_feature_variants_templates_pid'), 'feature_variants_templates', ['pid'], unique=True)
    op.create_table('user_experience',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('experience_id', sa.UUID(), nullable=False),
    sa.Column('assigned_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('pid', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('modified_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['experience_id'], ['experiences.pid'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.pid'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'experience_id', name='uq_user_experience_user_exp')
    )
    op.create_index('idx_user_experience_assigned', 'user_experience', ['assigned_at'], unique=False)
    op.create_index('idx_user_experience_experience', 'user_experience', ['experience_id'], unique=False)
    op.create_index('idx_user_experience_user', 'user_experience', ['user_id'], unique=False)
    op.create_index(op.f('ix_user_experience_experience_id'), 'user_experience', ['experience_id'], unique=False)
    op.create_index(op.f('ix_user_experience_id'), 'user_experience', ['id'], unique=True)
    op.create_index(op.f('ix_user_experience_pid'), 'user_experience', ['pid'], unique=True)
    op.create_index(op.f('ix_user_experience_user_id'), 'user_experience', ['user_id'], unique=False)
    op.drop_index(op.f('idx_targeting_rules_feature_priority'), table_name='targeting_rules')
    op.drop_index(op.f('ix_targeting_rules_feature_id'), table_name='targeting_rules')
    op.drop_index(op.f('ix_targeting_rules_id'), table_name='targeting_rules')
    op.drop_index(op.f('ix_targeting_rules_pid'), table_name='targeting_rules')
    op.drop_table('targeting_rules')
    op.drop_index(op.f('idx_user_feature_variants_org_app'), table_name='user_feature_variants')
    op.drop_index(op.f('ix_user_feature_variants_app_id'), table_name='user_feature_variants')
    op.drop_index(op.f('ix_user_feature_variants_feature_id'), table_name='user_feature_variants')
    op.drop_index(op.f('ix_user_feature_variants_id'), table_name='user_feature_variants')
    op.drop_index(op.f('ix_user_feature_variants_organisation_id'), table_name='user_feature_variants')
    op.drop_index(op.f('ix_user_feature_variants_pid'), table_name='user_feature_variants')
    op.drop_index(op.f('ix_user_feature_variants_user_id'), table_name='user_feature_variants')
    op.drop_index(op.f('ix_user_feature_variants_variant_name'), table_name='user_feature_variants')
    op.drop_table('user_feature_variants')
    op.drop_index(op.f('ix_individual_targeting_feature_id'), table_name='individual_targeting')
    op.drop_index(op.f('ix_individual_targeting_id'), table_name='individual_targeting')
    op.drop_index(op.f('ix_individual_targeting_pid'), table_name='individual_targeting')
    op.drop_table('individual_targeting')
    op.add_column('feature_variants', sa.Column('experience_id', sa.UUID(), nullable=False))
    op.create_index('idx_feature_variants_feature_experience', 'feature_variants', ['feature_id', 'experience_id'], unique=False)
    op.create_index(op.f('ix_feature_variants_experience_id'), 'feature_variants', ['experience_id'], unique=False)
    op.create_foreign_key(None, 'feature_variants', 'experiences', ['experience_id'], ['pid'])
    op.create_index('idx_segments_name_org_app', 'segments', ['name', 'organisation_id', 'app_id'], unique=False)
    op.create_unique_constraint('uq_segments_name_org_app', 'segments', ['name', 'organisation_id', 'app_id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('uq_segments_name_org_app', 'segments', type_='unique')
    op.drop_index('idx_segments_name_org_app', table_name='segments')
    op.drop_constraint(None, 'feature_variants', type_='foreignkey')
    op.drop_index(op.f('ix_feature_variants_experience_id'), table_name='feature_variants')
    op.drop_index('idx_feature_variants_feature_experience', table_name='feature_variants')
    op.drop_column('feature_variants', 'experience_id')
    op.create_table('individual_targeting',
    sa.Column('feature_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('rule_config', postgresql.JSON(astext_type=sa.Text()), server_default=sa.text("'{}'::json"), autoincrement=False, nullable=False),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('pid', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('modified_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['feature_id'], ['feature_flags.pid'], name=op.f('individual_targeting_feature_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('individual_targeting_pkey'))
    )
    op.create_index(op.f('ix_individual_targeting_pid'), 'individual_targeting', ['pid'], unique=True)
    op.create_index(op.f('ix_individual_targeting_id'), 'individual_targeting', ['id'], unique=True)
    op.create_index(op.f('ix_individual_targeting_feature_id'), 'individual_targeting', ['feature_id'], unique=False)
    op.create_table('user_feature_variants',
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('feature_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('variant_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('variant_config', postgresql.JSON(astext_type=sa.Text()), server_default=sa.text("'{}'::json"), autoincrement=False, nullable=False),
    sa.Column('organisation_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('app_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('pid', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('modified_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('user_feature_variants_pkey')),
    sa.UniqueConstraint('user_id', 'feature_id', name=op.f('uq_user_feature_variants_user_feature'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index(op.f('ix_user_feature_variants_variant_name'), 'user_feature_variants', ['variant_name'], unique=False)
    op.create_index(op.f('ix_user_feature_variants_user_id'), 'user_feature_variants', ['user_id'], unique=False)
    op.create_index(op.f('ix_user_feature_variants_pid'), 'user_feature_variants', ['pid'], unique=True)
    op.create_index(op.f('ix_user_feature_variants_organisation_id'), 'user_feature_variants', ['organisation_id'], unique=False)
    op.create_index(op.f('ix_user_feature_variants_id'), 'user_feature_variants', ['id'], unique=True)
    op.create_index(op.f('ix_user_feature_variants_feature_id'), 'user_feature_variants', ['feature_id'], unique=False)
    op.create_index(op.f('ix_user_feature_variants_app_id'), 'user_feature_variants', ['app_id'], unique=False)
    op.create_index(op.f('idx_user_feature_variants_org_app'), 'user_feature_variants', ['organisation_id', 'app_id'], unique=False)
    op.create_table('targeting_rules',
    sa.Column('feature_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('rule_config', postgresql.JSON(astext_type=sa.Text()), server_default=sa.text("'{}'::json"), autoincrement=False, nullable=False),
    sa.Column('priority', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('pid', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('modified_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['feature_id'], ['feature_flags.pid'], name=op.f('targeting_rules_feature_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('targeting_rules_pkey')),
    sa.UniqueConstraint('feature_id', 'priority', name=op.f('uq_targeting_rules_feature_priority'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index(op.f('ix_targeting_rules_pid'), 'targeting_rules', ['pid'], unique=True)
    op.create_index(op.f('ix_targeting_rules_id'), 'targeting_rules', ['id'], unique=True)
    op.create_index(op.f('ix_targeting_rules_feature_id'), 'targeting_rules', ['feature_id'], unique=False)
    op.create_index(op.f('idx_targeting_rules_feature_priority'), 'targeting_rules', ['feature_id', 'priority'], unique=False)
    op.drop_index(op.f('ix_user_experience_user_id'), table_name='user_experience')
    op.drop_index(op.f('ix_user_experience_pid'), table_name='user_experience')
    op.drop_index(op.f('ix_user_experience_id'), table_name='user_experience')
    op.drop_index(op.f('ix_user_experience_experience_id'), table_name='user_experience')
    op.drop_index('idx_user_experience_user', table_name='user_experience')
    op.drop_index('idx_user_experience_experience', table_name='user_experience')
    op.drop_index('idx_user_experience_assigned', table_name='user_experience')
    op.drop_table('user_experience')
    op.drop_index(op.f('ix_feature_variants_templates_pid'), table_name='feature_variants_templates')
    op.drop_index(op.f('ix_feature_variants_templates_name'), table_name='feature_variants_templates')
    op.drop_index(op.f('ix_feature_variants_templates_id'), table_name='feature_variants_templates')
    op.drop_index(op.f('ix_feature_variants_templates_feature_id'), table_name='feature_variants_templates')
    op.drop_index('idx_feature_variants_templates_feature', table_name='feature_variants_templates')
    op.drop_table('feature_variants_templates')
    op.drop_index(op.f('ix_experience_segments_segment_id'), table_name='experience_segments')
    op.drop_index(op.f('ix_experience_segments_pid'), table_name='experience_segments')
    op.drop_index(op.f('ix_experience_segments_id'), table_name='experience_segments')
    op.drop_index(op.f('ix_experience_segments_experience_id'), table_name='experience_segments')
    op.drop_index('idx_experience_segments_segment', table_name='experience_segments')
    op.drop_index('idx_experience_segments_experience', table_name='experience_segments')
    op.drop_table('experience_segments')
    op.drop_index(op.f('ix_experiences_status'), table_name='experiences')
    op.drop_index(op.f('ix_experiences_priority'), table_name='experiences')
    op.drop_index(op.f('ix_experiences_pid'), table_name='experiences')
    op.drop_index(op.f('ix_experiences_organisation_id'), table_name='experiences')
    op.drop_index(op.f('ix_experiences_name'), table_name='experiences')
    op.drop_index(op.f('ix_experiences_last_updated_at'), table_name='experiences')
    op.drop_index(op.f('ix_experiences_id'), table_name='experiences')
    op.drop_index(op.f('ix_experiences_app_id'), table_name='experiences')
    op.drop_index('idx_experiences_updated_org_app', table_name='experiences')
    op.drop_index('idx_experiences_status_org_app', table_name='experiences')
    op.drop_index('idx_experiences_priority_org_app', table_name='experiences')
    op.drop_index('idx_experiences_priority_created_org_app', table_name='experiences')
    op.drop_index('idx_experiences_created_desc', table_name='experiences', postgresql_using='btree')
    op.drop_table('experiences')
    # ### end Alembic commands ###
