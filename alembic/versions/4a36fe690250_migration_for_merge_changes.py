"""Migration for merge changes

Revision ID: 4a36fe690250
Revises: 3895c4350d44
Create Date: 2025-08-04 16:42:50.623840

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4a36fe690250'
down_revision: Union[str, Sequence[str], None] = '3895c4350d44'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('auth_user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=False),
    sa.Column('company_name', sa.String(), nullable=False),
    sa.Column('email', sa.String(length=320), nullable=False),
    sa.Column('hashed_password', sa.String(length=1024), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_auth_user_email'), 'auth_user', ['email'], unique=True)
    op.create_table('invitations',
    sa.Column('target_type', sa.Enum('org', 'app', name='invitationtargettype', native_enum=False), nullable=False),
    sa.Column('target_id', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('role', sa.String(), nullable=False),
    sa.Column('token', sa.String(), nullable=False),
    sa.Column('status', sa.Enum('pending', 'accepted', 'declined', 'revoked', name='invitationstatus', native_enum=False), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('pid', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('modified_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('token')
    )
    op.create_index(op.f('ix_invitations_id'), 'invitations', ['id'], unique=True)
    op.create_index(op.f('ix_invitations_pid'), 'invitations', ['pid'], unique=True)
    op.create_table('organisations',
    sa.Column('pid', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('modified_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_organisations_id'), 'organisations', ['id'], unique=True)
    op.create_index(op.f('ix_organisations_pid'), 'organisations', ['pid'], unique=True)
    op.create_table('apps',
    sa.Column('pid', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('organisation_id', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('modified_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['organisation_id'], ['organisations.pid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_apps_id'), 'apps', ['id'], unique=True)
    op.create_index(op.f('ix_apps_pid'), 'apps', ['pid'], unique=True)
    op.create_table('user_organisation_membership',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('organisation_id', sa.String(), nullable=False),
    sa.Column('role', sa.Enum('owner', 'admin', 'member', name='organisationrole', native_enum=False), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('pid', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('modified_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['organisation_id'], ['organisations.pid'], ),
    sa.ForeignKeyConstraint(['user_id'], ['auth_user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_organisation_membership_id'), 'user_organisation_membership', ['id'], unique=True)
    op.create_index(op.f('ix_user_organisation_membership_pid'), 'user_organisation_membership', ['pid'], unique=True)
    op.create_table('user_app_membership',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('app_id', sa.String(), nullable=False),
    sa.Column('role', sa.Enum('owner', 'admin', 'developer', 'analyst', 'viewer', name='approle', native_enum=False), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('pid', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('modified_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['app_id'], ['apps.pid'], ),
    sa.ForeignKeyConstraint(['user_id'], ['auth_user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_app_membership_id'), 'user_app_membership', ['id'], unique=True)
    op.create_index(op.f('ix_user_app_membership_pid'), 'user_app_membership', ['pid'], unique=True)
    op.create_foreign_key(None, 'events_schema', 'apps', ['app_id'], ['pid'])
    op.create_foreign_key(None, 'events_schema', 'organisations', ['organisation_id'], ['pid'])
    op.create_foreign_key(None, 'experiences', 'apps', ['app_id'], ['pid'])
    op.create_foreign_key(None, 'experiences', 'organisations', ['organisation_id'], ['pid'])
    op.create_foreign_key(None, 'feature_flags', 'apps', ['app_id'], ['pid'])
    op.create_foreign_key(None, 'feature_flags', 'organisations', ['organisation_id'], ['pid'])
    op.create_foreign_key(None, 'metrics', 'organisations', ['organisation_id'], ['pid'])
    op.create_foreign_key(None, 'metrics', 'apps', ['app_id'], ['pid'])
    op.create_foreign_key(None, 'personalisations', 'organisations', ['organisation_id'], ['pid'])
    op.create_foreign_key(None, 'personalisations', 'apps', ['app_id'], ['pid'])
    op.create_foreign_key(None, 'recommendations', 'apps', ['app_id'], ['pid'])
    op.create_foreign_key(None, 'recommendations', 'organisations', ['organisation_id'], ['pid'])
    op.create_foreign_key(None, 'segments', 'apps', ['app_id'], ['pid'])
    op.create_foreign_key(None, 'segments', 'organisations', ['organisation_id'], ['pid'])
    op.create_foreign_key(None, 'user_experience', 'apps', ['app_id'], ['pid'])
    op.create_foreign_key(None, 'user_experience', 'organisations', ['organisation_id'], ['pid'])
    op.create_foreign_key(None, 'user_profile_keys', 'organisations', ['organisation_id'], ['pid'])
    op.create_foreign_key(None, 'user_profile_keys', 'apps', ['app_id'], ['pid'])
    op.create_foreign_key(None, 'users', 'organisations', ['organisation_id'], ['pid'])
    op.create_foreign_key(None, 'users', 'apps', ['app_id'], ['pid'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='foreignkey')
    op.drop_constraint(None, 'users', type_='foreignkey')
    op.drop_constraint(None, 'user_profile_keys', type_='foreignkey')
    op.drop_constraint(None, 'user_profile_keys', type_='foreignkey')
    op.drop_constraint(None, 'user_experience', type_='foreignkey')
    op.drop_constraint(None, 'user_experience', type_='foreignkey')
    op.drop_constraint(None, 'segments', type_='foreignkey')
    op.drop_constraint(None, 'segments', type_='foreignkey')
    op.drop_constraint(None, 'recommendations', type_='foreignkey')
    op.drop_constraint(None, 'recommendations', type_='foreignkey')
    op.drop_constraint(None, 'personalisations', type_='foreignkey')
    op.drop_constraint(None, 'personalisations', type_='foreignkey')
    op.drop_constraint(None, 'metrics', type_='foreignkey')
    op.drop_constraint(None, 'metrics', type_='foreignkey')
    op.drop_constraint(None, 'feature_flags', type_='foreignkey')
    op.drop_constraint(None, 'feature_flags', type_='foreignkey')
    op.drop_constraint(None, 'experiences', type_='foreignkey')
    op.drop_constraint(None, 'experiences', type_='foreignkey')
    op.drop_constraint(None, 'events_schema', type_='foreignkey')
    op.drop_constraint(None, 'events_schema', type_='foreignkey')
    op.drop_index(op.f('ix_user_app_membership_pid'), table_name='user_app_membership')
    op.drop_index(op.f('ix_user_app_membership_id'), table_name='user_app_membership')
    op.drop_table('user_app_membership')
    op.drop_index(op.f('ix_user_organisation_membership_pid'), table_name='user_organisation_membership')
    op.drop_index(op.f('ix_user_organisation_membership_id'), table_name='user_organisation_membership')
    op.drop_table('user_organisation_membership')
    op.drop_index(op.f('ix_apps_pid'), table_name='apps')
    op.drop_index(op.f('ix_apps_id'), table_name='apps')
    op.drop_table('apps')
    op.drop_index(op.f('ix_organisations_pid'), table_name='organisations')
    op.drop_index(op.f('ix_organisations_id'), table_name='organisations')
    op.drop_table('organisations')
    op.drop_index(op.f('ix_invitations_pid'), table_name='invitations')
    op.drop_index(op.f('ix_invitations_id'), table_name='invitations')
    op.drop_table('invitations')
    op.drop_index(op.f('ix_auth_user_email'), table_name='auth_user')
    op.drop_table('auth_user')
    # ### end Alembic commands ###
