"""user experience

Revision ID: ba3f9b96fb79
Revises: a4e74831560c
Create Date: 2025-07-22 06:33:53.666923

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ba3f9b96fb79'
down_revision: Union[str, Sequence[str], None] = 'a4e74831560c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_experience',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('experience_id', sa.UUID(), nullable=False),
    sa.Column('personalisation_id', sa.UUID(), nullable=True),
    sa.Column('personalisation_name', sa.String(), nullable=True),
    sa.Column('features', sa.JSON(), server_default=sa.text("json('{}')"), nullable=False),
    sa.Column('assigned_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('evaluation_reason', sa.String(), nullable=False),
    sa.Column('organisation_id', sa.String(), nullable=False),
    sa.Column('app_id', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('pid', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('modified_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['experience_id'], ['experiences.pid'], ),
    sa.ForeignKeyConstraint(['personalisation_id'], ['personalisations.pid'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.pid'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'experience_id', 'organisation_id', 'app_id', name='uq_user_experience_user_exp_org_app')
    )
    op.create_index('idx_user_experience_assigned_org_app', 'user_experience', ['assigned_at', 'organisation_id', 'app_id'], unique=False)
    op.create_index('idx_user_experience_experience_org_app', 'user_experience', ['experience_id', 'organisation_id', 'app_id'], unique=False)
    op.create_index('idx_user_experience_main_query', 'user_experience', ['user_id', 'organisation_id', 'app_id', 'experience_id'], unique=False)
    op.create_index('idx_user_experience_user_assigned', 'user_experience', ['user_id', 'assigned_at'], unique=False)
    op.create_index(op.f('ix_user_experience_id'), 'user_experience', ['id'], unique=True)
    op.create_index(op.f('ix_user_experience_pid'), 'user_experience', ['pid'], unique=True)
    op.drop_index(op.f('idx_user_experience_assigned_org_app'), table_name='user_experience_personalisation')
    op.drop_index(op.f('idx_user_experience_experience_org_app'), table_name='user_experience_personalisation')
    op.drop_index(op.f('idx_user_experience_main_query'), table_name='user_experience_personalisation')
    op.drop_index(op.f('idx_user_experience_user_assigned'), table_name='user_experience_personalisation')
    op.drop_index(op.f('ix_user_experience_personalisation_id'), table_name='user_experience_personalisation')
    op.drop_index(op.f('ix_user_experience_personalisation_pid'), table_name='user_experience_personalisation')
    op.drop_table('user_experience_personalisation')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_experience_personalisation',
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('experience_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('personalisation_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('segment_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('segment_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('experience_segment_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('experience_segment_personalisation_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('assigned_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('evaluation_reason', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('organisation_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('app_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('pid', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('modified_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['experience_id'], ['experiences.pid'], name=op.f('user_experience_personalisation_experience_id_fkey')),
    sa.ForeignKeyConstraint(['personalisation_id'], ['personalisations.pid'], name=op.f('user_experience_personalisation_personalisation_id_fkey')),
    sa.ForeignKeyConstraint(['user_id'], ['users.pid'], name=op.f('user_experience_personalisation_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('user_experience_personalisation_pkey')),
    sa.UniqueConstraint('user_id', 'experience_id', 'organisation_id', 'app_id', name=op.f('uq_user_experience_user_exp_org_app'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index(op.f('ix_user_experience_personalisation_pid'), 'user_experience_personalisation', ['pid'], unique=True)
    op.create_index(op.f('ix_user_experience_personalisation_id'), 'user_experience_personalisation', ['id'], unique=True)
    op.create_index(op.f('idx_user_experience_user_assigned'), 'user_experience_personalisation', ['user_id', 'assigned_at'], unique=False)
    op.create_index(op.f('idx_user_experience_main_query'), 'user_experience_personalisation', ['user_id', 'organisation_id', 'app_id', 'experience_id'], unique=False)
    op.create_index(op.f('idx_user_experience_experience_org_app'), 'user_experience_personalisation', ['experience_id', 'organisation_id', 'app_id'], unique=False)
    op.create_index(op.f('idx_user_experience_assigned_org_app'), 'user_experience_personalisation', ['assigned_at', 'organisation_id', 'app_id'], unique=False)
    op.drop_index(op.f('ix_user_experience_pid'), table_name='user_experience')
    op.drop_index(op.f('ix_user_experience_id'), table_name='user_experience')
    op.drop_index('idx_user_experience_user_assigned', table_name='user_experience')
    op.drop_index('idx_user_experience_main_query', table_name='user_experience')
    op.drop_index('idx_user_experience_experience_org_app', table_name='user_experience')
    op.drop_index('idx_user_experience_assigned_org_app', table_name='user_experience')
    op.drop_table('user_experience')
    # ### end Alembic commands ###
